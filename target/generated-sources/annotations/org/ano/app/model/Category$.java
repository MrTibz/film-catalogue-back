package org.ano.app.model;

import com.speedment.jpastreamer.field.ComparableField;
import com.speedment.jpastreamer.field.ReferenceField;
import com.speedment.jpastreamer.field.ShortField;
import com.speedment.jpastreamer.field.StringField;
import com.speedment.jpastreamer.field.exception.IllegalJavaBeanException;

import java.sql.Timestamp;
import java.util.List;

/**
 * The generated base for entity {@link Category} representing entities of the
 * {@code category}-table in the database.
 * <p> This file has been automatically generated by JPAStreamer.
 * 
 * @author JPAStreamer
 */
public final class Category$ {
    
    /**
     * This Field corresponds to the {@link Category} field "name".
     */
    public static final StringField<Category> name = StringField.create(
        Category.class,
        "name",
        Category::getName,
        false
    );
    /**
     * This Field corresponds to the {@link Category} field "last_update".
     */
    public static final ComparableField<Category, Timestamp> last_update = ComparableField.create(
        Category.class,
        "last_update",
        category -> {throw new IllegalJavaBeanException(Category.class, "last_update");},
        false
    );
    /**
     * This Field corresponds to the {@link Category} field "category_id".
     */
    public static final ShortField<Category> category_id = ShortField.create(
        Category.class,
        "category_id",
        category -> {throw new IllegalJavaBeanException(Category.class, "category_id");},
        false
    );
    /**
     * This Field corresponds to the {@link Category} field "films".
     */
    public static final ReferenceField<Category, List<Film>> films = ReferenceField.create(
        Category.class,
        "films",
        Category::getFilms,
        false
    );
}